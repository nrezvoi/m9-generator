'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _yargs = require('yargs');

var _loadConfigs = require('./lib/load-configs');

var _loadConfigs2 = _interopRequireDefault(_loadConfigs);

var _readPartialsDir = require('./lib/read-partials-dir');

var _readPartialsDir2 = _interopRequireDefault(_readPartialsDir);

var _configWebpack = require('./config-webpack');

var _configWebpack2 = _interopRequireDefault(_configWebpack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isGulpDebug = process.env.GULP_DEBUG === 'true';
var isProduction = process.env.NODE_ENV === 'production';
var isDevelopment = !isProduction;

var root = _yargs.argv.root;
var src = _path2.default.join(root, 'src');
var dst = _path2.default.join(root, 'build');

var DIR_PAGES = 'pages';
var DIR_CONTENT = 'content';
var DIR_HELPERS = 'helpers';
var DIR_PARTIALS = 'partials';
var DIR_LAYOUTS = 'layouts';
var DIR_SCRIPTS = 'scripts';
var DIR_STYLES = 'styles';
var DIR_ASSETS = 'assets';
var DIR_PUBLIC = 'public';
var TPL_ENGINE = 'handlebars';

var config = {
  isGulpDebug: isGulpDebug,
  isProduction: isProduction,
  isDevelopment: isDevelopment,
  paths: {
    root: root,
    src: src,
    dst: dst,
    srcScripts: _path2.default.join(src, DIR_SCRIPTS)
  },
  htmlmin: {
    pattern: "**/*.html"
  },
  pages: {
    directory: _path2.default.join(src, DIR_PAGES)
  },
  contentDir: {
    directory: _path2.default.join(src, DIR_CONTENT),
    transformer: 'wordpress'
  },
  helpers: {
    directory: _path2.default.join(src, DIR_HELPERS)
  },
  layouts: {
    engine: TPL_ENGINE,
    directory: _path2.default.join(src, DIR_LAYOUTS),
    partials: _path2.default.join(src, DIR_PARTIALS)
  },
  inplace: {
    engineOptions: {
      partials: (0, _readPartialsDir2.default)(_path2.default.join(src, DIR_PARTIALS))
    }
  },
  copy: {
    src: _path2.default.join(src, DIR_PUBLIC, '**/*')
  },
  assets: {
    scripts: _path2.default.join(src, DIR_SCRIPTS, '*.js'),
    styles: _path2.default.join(src, DIR_STYLES, '*.css'),
    manifest: 'assets.json',
    publicPath: '/' + DIR_ASSETS + '/',
    dst: _path2.default.join(dst, DIR_ASSETS)
  },
  dev: {
    host: 'localhost',
    webpackPort: 9000,
    browsersyncPort: 3000
  }
};

config = (0, _configWebpack2.default)(config);
(0, _loadConfigs2.default)(config, root);

exports.default = config;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcuanMiXSwibmFtZXMiOlsiaXNHdWxwRGVidWciLCJwcm9jZXNzIiwiZW52IiwiR1VMUF9ERUJVRyIsImlzUHJvZHVjdGlvbiIsIk5PREVfRU5WIiwiaXNEZXZlbG9wbWVudCIsInJvb3QiLCJhcmd2Iiwic3JjIiwicGF0aCIsImpvaW4iLCJkc3QiLCJESVJfUEFHRVMiLCJESVJfQ09OVEVOVCIsIkRJUl9IRUxQRVJTIiwiRElSX1BBUlRJQUxTIiwiRElSX0xBWU9VVFMiLCJESVJfU0NSSVBUUyIsIkRJUl9TVFlMRVMiLCJESVJfQVNTRVRTIiwiRElSX1BVQkxJQyIsIlRQTF9FTkdJTkUiLCJjb25maWciLCJwYXRocyIsInNyY1NjcmlwdHMiLCJodG1sbWluIiwicGF0dGVybiIsInBhZ2VzIiwiZGlyZWN0b3J5IiwiY29udGVudERpciIsInRyYW5zZm9ybWVyIiwiaGVscGVycyIsImxheW91dHMiLCJlbmdpbmUiLCJwYXJ0aWFscyIsImlucGxhY2UiLCJlbmdpbmVPcHRpb25zIiwiY29weSIsImFzc2V0cyIsInNjcmlwdHMiLCJzdHlsZXMiLCJtYW5pZmVzdCIsInB1YmxpY1BhdGgiLCJkZXYiLCJob3N0Iiwid2VicGFja1BvcnQiLCJicm93c2Vyc3luY1BvcnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxjQUFjQyxRQUFRQyxHQUFSLENBQVlDLFVBQVosS0FBMkIsTUFBL0M7QUFDQSxJQUFNQyxlQUFlSCxRQUFRQyxHQUFSLENBQVlHLFFBQVosS0FBeUIsWUFBOUM7QUFDQSxJQUFNQyxnQkFBZ0IsQ0FBQ0YsWUFBdkI7O0FBRUEsSUFBTUcsT0FBT0MsWUFBS0QsSUFBbEI7QUFDQSxJQUFNRSxNQUFNQyxlQUFLQyxJQUFMLENBQVVKLElBQVYsRUFBZ0IsS0FBaEIsQ0FBWjtBQUNBLElBQU1LLE1BQU1GLGVBQUtDLElBQUwsQ0FBVUosSUFBVixFQUFnQixPQUFoQixDQUFaOztBQUVBLElBQU1NLFlBQVksT0FBbEI7QUFDQSxJQUFNQyxjQUFjLFNBQXBCO0FBQ0EsSUFBTUMsY0FBYyxTQUFwQjtBQUNBLElBQU1DLGVBQWUsVUFBckI7QUFDQSxJQUFNQyxjQUFjLFNBQXBCO0FBQ0EsSUFBTUMsY0FBYyxTQUFwQjtBQUNBLElBQU1DLGFBQWEsUUFBbkI7QUFDQSxJQUFNQyxhQUFhLFFBQW5CO0FBQ0EsSUFBTUMsYUFBYSxRQUFuQjtBQUNBLElBQU1DLGFBQWEsWUFBbkI7O0FBRUEsSUFBSUMsU0FBUztBQUNYdkIsMEJBRFc7QUFFWEksNEJBRlc7QUFHWEUsOEJBSFc7QUFJWGtCLFNBQU87QUFDTGpCLGNBREs7QUFFTEUsWUFGSztBQUdMRyxZQUhLO0FBSUxhLGdCQUFZZixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZVMsV0FBZjtBQUpQLEdBSkk7QUFVWFEsV0FBUztBQUNQQyxhQUFTO0FBREYsR0FWRTtBQWFYQyxTQUFPO0FBQ0xDLGVBQVduQixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZUksU0FBZjtBQUROLEdBYkk7QUFnQlhpQixjQUFZO0FBQ1ZELGVBQVduQixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZUssV0FBZixDQUREO0FBRVZpQixpQkFBYTtBQUZILEdBaEJEO0FBb0JYQyxXQUFTO0FBQ1BILGVBQVduQixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZU0sV0FBZjtBQURKLEdBcEJFO0FBdUJYa0IsV0FBUztBQUNQQyxZQUFRWixVQUREO0FBRVBPLGVBQVduQixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZVEsV0FBZixDQUZKO0FBR1BrQixjQUFVekIsZUFBS0MsSUFBTCxDQUFVRixHQUFWLEVBQWVPLFlBQWY7QUFISCxHQXZCRTtBQTRCWG9CLFdBQVM7QUFDUEMsbUJBQWU7QUFDYkYsZ0JBQVUsK0JBQWdCekIsZUFBS0MsSUFBTCxDQUFVRixHQUFWLEVBQWVPLFlBQWYsQ0FBaEI7QUFERztBQURSLEdBNUJFO0FBaUNYc0IsUUFBTTtBQUNKN0IsU0FBS0MsZUFBS0MsSUFBTCxDQUFVRixHQUFWLEVBQWVZLFVBQWYsRUFBMkIsTUFBM0I7QUFERCxHQWpDSztBQW9DWGtCLFVBQVE7QUFDTkMsYUFBUzlCLGVBQUtDLElBQUwsQ0FBVUYsR0FBVixFQUFlUyxXQUFmLEVBQTRCLE1BQTVCLENBREg7QUFFTnVCLFlBQVEvQixlQUFLQyxJQUFMLENBQVVGLEdBQVYsRUFBZVUsVUFBZixFQUEyQixPQUEzQixDQUZGO0FBR051QixjQUFVLGFBSEo7QUFJTkMsc0JBQWdCdkIsVUFBaEIsTUFKTTtBQUtOUixTQUFLRixlQUFLQyxJQUFMLENBQVVDLEdBQVYsRUFBZVEsVUFBZjtBQUxDLEdBcENHO0FBMkNYd0IsT0FBSztBQUNIQyxVQUFNLFdBREg7QUFFSEMsaUJBQWEsSUFGVjtBQUdIQyxxQkFBaUI7QUFIZDtBQTNDTSxDQUFiOztBQWtEQXhCLFNBQVMsNkJBQWNBLE1BQWQsQ0FBVDtBQUNBLDJCQUFZQSxNQUFaLEVBQW9CaEIsSUFBcEI7O2tCQUVlZ0IsTSIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJ1xuaW1wb3J0IHsgYXJndiB9IGZyb20gJ3lhcmdzJ1xuaW1wb3J0IGxvYWRDb25maWdzIGZyb20gJy4vbGliL2xvYWQtY29uZmlncydcbmltcG9ydCByZWFkUGFydGlhbHNEaXIgZnJvbSAnLi9saWIvcmVhZC1wYXJ0aWFscy1kaXInXG5pbXBvcnQgd2VicGFja0NvbmZpZyBmcm9tICcuL2NvbmZpZy13ZWJwYWNrJ1xuXG5jb25zdCBpc0d1bHBEZWJ1ZyA9IHByb2Nlc3MuZW52LkdVTFBfREVCVUcgPT09ICd0cnVlJ1xuY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJ1xuY29uc3QgaXNEZXZlbG9wbWVudCA9ICFpc1Byb2R1Y3Rpb25cblxuY29uc3Qgcm9vdCA9IGFyZ3Yucm9vdFxuY29uc3Qgc3JjID0gcGF0aC5qb2luKHJvb3QsICdzcmMnKVxuY29uc3QgZHN0ID0gcGF0aC5qb2luKHJvb3QsICdidWlsZCcpXG5cbmNvbnN0IERJUl9QQUdFUyA9ICdwYWdlcydcbmNvbnN0IERJUl9DT05URU5UID0gJ2NvbnRlbnQnXG5jb25zdCBESVJfSEVMUEVSUyA9ICdoZWxwZXJzJ1xuY29uc3QgRElSX1BBUlRJQUxTID0gJ3BhcnRpYWxzJ1xuY29uc3QgRElSX0xBWU9VVFMgPSAnbGF5b3V0cydcbmNvbnN0IERJUl9TQ1JJUFRTID0gJ3NjcmlwdHMnXG5jb25zdCBESVJfU1RZTEVTID0gJ3N0eWxlcydcbmNvbnN0IERJUl9BU1NFVFMgPSAnYXNzZXRzJ1xuY29uc3QgRElSX1BVQkxJQyA9ICdwdWJsaWMnXG5jb25zdCBUUExfRU5HSU5FID0gJ2hhbmRsZWJhcnMnXG5cbmxldCBjb25maWcgPSB7XG4gIGlzR3VscERlYnVnLFxuICBpc1Byb2R1Y3Rpb24sXG4gIGlzRGV2ZWxvcG1lbnQsXG4gIHBhdGhzOiB7XG4gICAgcm9vdCxcbiAgICBzcmMsXG4gICAgZHN0LFxuICAgIHNyY1NjcmlwdHM6IHBhdGguam9pbihzcmMsIERJUl9TQ1JJUFRTKVxuICB9LFxuICBodG1sbWluOiB7XG4gICAgcGF0dGVybjogXCIqKi8qLmh0bWxcIlxuICB9LFxuICBwYWdlczoge1xuICAgIGRpcmVjdG9yeTogcGF0aC5qb2luKHNyYywgRElSX1BBR0VTKVxuICB9LFxuICBjb250ZW50RGlyOiB7XG4gICAgZGlyZWN0b3J5OiBwYXRoLmpvaW4oc3JjLCBESVJfQ09OVEVOVCksXG4gICAgdHJhbnNmb3JtZXI6ICd3b3JkcHJlc3MnXG4gIH0sXG4gIGhlbHBlcnM6IHtcbiAgICBkaXJlY3Rvcnk6IHBhdGguam9pbihzcmMsIERJUl9IRUxQRVJTKVxuICB9LFxuICBsYXlvdXRzOiB7XG4gICAgZW5naW5lOiBUUExfRU5HSU5FLFxuICAgIGRpcmVjdG9yeTogcGF0aC5qb2luKHNyYywgRElSX0xBWU9VVFMpLFxuICAgIHBhcnRpYWxzOiBwYXRoLmpvaW4oc3JjLCBESVJfUEFSVElBTFMpXG4gIH0sXG4gIGlucGxhY2U6IHtcbiAgICBlbmdpbmVPcHRpb25zOiB7XG4gICAgICBwYXJ0aWFsczogcmVhZFBhcnRpYWxzRGlyKHBhdGguam9pbihzcmMsIERJUl9QQVJUSUFMUykpXG4gICAgfVxuICB9LFxuICBjb3B5OiB7XG4gICAgc3JjOiBwYXRoLmpvaW4oc3JjLCBESVJfUFVCTElDLCAnKiovKicpXG4gIH0sXG4gIGFzc2V0czoge1xuICAgIHNjcmlwdHM6IHBhdGguam9pbihzcmMsIERJUl9TQ1JJUFRTLCAnKi5qcycpLFxuICAgIHN0eWxlczogcGF0aC5qb2luKHNyYywgRElSX1NUWUxFUywgJyouY3NzJyksXG4gICAgbWFuaWZlc3Q6ICdhc3NldHMuanNvbicsXG4gICAgcHVibGljUGF0aDogYC8ke0RJUl9BU1NFVFN9L2AsXG4gICAgZHN0OiBwYXRoLmpvaW4oZHN0LCBESVJfQVNTRVRTKVxuICB9LFxuICBkZXY6IHtcbiAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICB3ZWJwYWNrUG9ydDogOTAwMCxcbiAgICBicm93c2Vyc3luY1BvcnQ6IDMwMDBcbiAgfVxufVxuXG5jb25maWcgPSB3ZWJwYWNrQ29uZmlnKGNvbmZpZylcbmxvYWRDb25maWdzKGNvbmZpZywgcm9vdClcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlnXG4iXX0=