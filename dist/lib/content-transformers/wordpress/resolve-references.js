"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = resolveReferences;


function resolveReferences(content) {
  Object.keys(content).forEach(function (contentType) {
    var entities = content[contentType];
    if (!Array.isArray(entities)) {
      processEntity(content, entities);
    } else {
      entities.forEach(function (entity) {
        return processEntity(content, entity);
      });
    }
  });

  return content;
}

function processEntity(srcContent, entity) {
  var acf = entity.acf;

  if (!acf) return;

  Object.keys(acf).forEach(function (propertyName) {
    var propertyValue = acf[propertyName];
    if (!isReference(propertyValue)) return;

    acf[propertyName] = resolvePropertyReferences(srcContent, propertyName, propertyValue);
  });
}

function isReference(entity) {
  return Array.isArray(entity) && entity.length && entity[0].ID && entity[0].post_type;
}

function getReferencedEntity(content, refEntitySrc) {
  var id = refEntitySrc.ID,
      postType = refEntitySrc.post_type;


  var entities = content[postType];
  return entities ? getById(entities, id) : refEntitySrc;
}

function resolvePropertyReferences(content, propertyName, propertyValue) {
  var resolvedValue = propertyValue.map(function (refEntitySrc) {
    return getReferencedEntity(content, refEntitySrc);
  });

  if (isSingleEntityReference(propertyName, propertyValue[0].post_type)) {
    return resolvedValue[0];
  }

  return resolvedValue;
}

function isSingleEntityReference(srcPropertyName, dstPropertyName) {
  var regexp = /^(?:.*_)?(.+)$/;
  var src = regexp.exec(srcPropertyName)[1];
  var dst = regexp.exec(dstPropertyName)[1];

  return src === dst;
}

function getById(entities, id) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var entity = _step.value;

      if (entity.id === id) return entity;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  throw new Error("Entity with id: '" + id + "' was not found in given list");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY29udGVudC10cmFuc2Zvcm1lcnMvd29yZHByZXNzL3Jlc29sdmUtcmVmZXJlbmNlcy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlUmVmZXJlbmNlcyIsImNvbnRlbnQiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImVudGl0aWVzIiwiY29udGVudFR5cGUiLCJBcnJheSIsImlzQXJyYXkiLCJwcm9jZXNzRW50aXR5IiwiZW50aXR5Iiwic3JjQ29udGVudCIsImFjZiIsInByb3BlcnR5VmFsdWUiLCJwcm9wZXJ0eU5hbWUiLCJpc1JlZmVyZW5jZSIsInJlc29sdmVQcm9wZXJ0eVJlZmVyZW5jZXMiLCJsZW5ndGgiLCJJRCIsInBvc3RfdHlwZSIsImdldFJlZmVyZW5jZWRFbnRpdHkiLCJyZWZFbnRpdHlTcmMiLCJpZCIsInBvc3RUeXBlIiwiZ2V0QnlJZCIsInJlc29sdmVkVmFsdWUiLCJtYXAiLCJpc1NpbmdsZUVudGl0eVJlZmVyZW5jZSIsInNyY1Byb3BlcnR5TmFtZSIsImRzdFByb3BlcnR5TmFtZSIsInJlZ2V4cCIsInNyYyIsImV4ZWMiLCJkc3QiLCJFcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQWVBLGlCOzs7QUFFZixTQUFTQSxpQkFBVCxDQUE0QkMsT0FBNUIsRUFBcUM7QUFDbkNDLFNBQU9DLElBQVAsQ0FBWUYsT0FBWixFQUFxQkcsT0FBckIsQ0FBNkIsdUJBQWU7QUFDMUMsUUFBTUMsV0FBV0osUUFBUUssV0FBUixDQUFqQjtBQUNBLFFBQUksQ0FBQ0MsTUFBTUMsT0FBTixDQUFjSCxRQUFkLENBQUwsRUFBOEI7QUFDNUJJLG9CQUFjUixPQUFkLEVBQXVCSSxRQUF2QjtBQUNELEtBRkQsTUFFTztBQUNMQSxlQUFTRCxPQUFULENBQWlCO0FBQUEsZUFBVUssY0FBY1IsT0FBZCxFQUF1QlMsTUFBdkIsQ0FBVjtBQUFBLE9BQWpCO0FBQ0Q7QUFDRixHQVBEOztBQVNBLFNBQU9ULE9BQVA7QUFDRDs7QUFFRCxTQUFTUSxhQUFULENBQXdCRSxVQUF4QixFQUFvQ0QsTUFBcEMsRUFBNEM7QUFBQSxNQUNsQ0UsR0FEa0MsR0FDMUJGLE1BRDBCLENBQ2xDRSxHQURrQzs7QUFFMUMsTUFBSSxDQUFDQSxHQUFMLEVBQVU7O0FBRVZWLFNBQU9DLElBQVAsQ0FBWVMsR0FBWixFQUFpQlIsT0FBakIsQ0FBeUIsd0JBQWdCO0FBQ3ZDLFFBQU1TLGdCQUFnQkQsSUFBSUUsWUFBSixDQUF0QjtBQUNBLFFBQUksQ0FBQ0MsWUFBWUYsYUFBWixDQUFMLEVBQWlDOztBQUVqQ0QsUUFBSUUsWUFBSixJQUFvQkUsMEJBQ2xCTCxVQURrQixFQUVsQkcsWUFGa0IsRUFHbEJELGFBSGtCLENBQXBCO0FBS0QsR0FURDtBQVVEOztBQUVELFNBQVNFLFdBQVQsQ0FBc0JMLE1BQXRCLEVBQThCO0FBQzVCLFNBQ0VILE1BQU1DLE9BQU4sQ0FBY0UsTUFBZCxLQUNFQSxPQUFPTyxNQURULElBRUVQLE9BQU8sQ0FBUCxFQUFVUSxFQUZaLElBR0VSLE9BQU8sQ0FBUCxFQUFVUyxTQUpkO0FBTUQ7O0FBRUQsU0FBU0MsbUJBQVQsQ0FBOEJuQixPQUE5QixFQUF1Q29CLFlBQXZDLEVBQXFEO0FBQUEsTUFFN0NDLEVBRjZDLEdBSS9DRCxZQUorQyxDQUVqREgsRUFGaUQ7QUFBQSxNQUd0Q0ssUUFIc0MsR0FJL0NGLFlBSitDLENBR2pERixTQUhpRDs7O0FBTW5ELE1BQU1kLFdBQVdKLFFBQVFzQixRQUFSLENBQWpCO0FBQ0EsU0FBT2xCLFdBQ0htQixRQUFRbkIsUUFBUixFQUFrQmlCLEVBQWxCLENBREcsR0FFSEQsWUFGSjtBQUdEOztBQUVELFNBQVNMLHlCQUFULENBQW9DZixPQUFwQyxFQUE2Q2EsWUFBN0MsRUFBMkRELGFBQTNELEVBQTBFO0FBQ3hFLE1BQU1ZLGdCQUFnQlosY0FBY2EsR0FBZCxDQUFrQjtBQUFBLFdBQ3RDTixvQkFBb0JuQixPQUFwQixFQUE2Qm9CLFlBQTdCLENBRHNDO0FBQUEsR0FBbEIsQ0FBdEI7O0FBR0EsTUFBSU0sd0JBQXdCYixZQUF4QixFQUFzQ0QsY0FBYyxDQUFkLEVBQWlCTSxTQUF2RCxDQUFKLEVBQXVFO0FBQ3JFLFdBQU9NLGNBQWMsQ0FBZCxDQUFQO0FBQ0Q7O0FBRUQsU0FBT0EsYUFBUDtBQUNEOztBQUVELFNBQVNFLHVCQUFULENBQWtDQyxlQUFsQyxFQUFtREMsZUFBbkQsRUFBb0U7QUFDbEUsTUFBTUMsU0FBUyxnQkFBZjtBQUNBLE1BQU1DLE1BQU1ELE9BQU9FLElBQVAsQ0FBWUosZUFBWixFQUE2QixDQUE3QixDQUFaO0FBQ0EsTUFBTUssTUFBTUgsT0FBT0UsSUFBUCxDQUFZSCxlQUFaLEVBQTZCLENBQTdCLENBQVo7O0FBRUEsU0FBT0UsUUFBUUUsR0FBZjtBQUNEOztBQUVELFNBQVNULE9BQVQsQ0FBa0JuQixRQUFsQixFQUE0QmlCLEVBQTVCLEVBQWdDO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQzlCLHlCQUFxQmpCLFFBQXJCLDhIQUErQjtBQUFBLFVBQXBCSyxNQUFvQjs7QUFDN0IsVUFBSUEsT0FBT1ksRUFBUCxLQUFjQSxFQUFsQixFQUFzQixPQUFPWixNQUFQO0FBQ3ZCO0FBSDZCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSzlCLFFBQU0sSUFBSXdCLEtBQUosdUJBQThCWixFQUE5QixtQ0FBTjtBQUNEIiwiZmlsZSI6InJlc29sdmUtcmVmZXJlbmNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IHJlc29sdmVSZWZlcmVuY2VzXG5cbmZ1bmN0aW9uIHJlc29sdmVSZWZlcmVuY2VzIChjb250ZW50KSB7XG4gIE9iamVjdC5rZXlzKGNvbnRlbnQpLmZvckVhY2goY29udGVudFR5cGUgPT4ge1xuICAgIGNvbnN0IGVudGl0aWVzID0gY29udGVudFtjb250ZW50VHlwZV1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZW50aXRpZXMpKSB7XG4gICAgICBwcm9jZXNzRW50aXR5KGNvbnRlbnQsIGVudGl0aWVzKVxuICAgIH0gZWxzZSB7XG4gICAgICBlbnRpdGllcy5mb3JFYWNoKGVudGl0eSA9PiBwcm9jZXNzRW50aXR5KGNvbnRlbnQsIGVudGl0eSkpXG4gICAgfVxuICB9KVxuXG4gIHJldHVybiBjb250ZW50XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NFbnRpdHkgKHNyY0NvbnRlbnQsIGVudGl0eSkge1xuICBjb25zdCB7IGFjZiB9ID0gZW50aXR5XG4gIGlmICghYWNmKSByZXR1cm5cblxuICBPYmplY3Qua2V5cyhhY2YpLmZvckVhY2gocHJvcGVydHlOYW1lID0+IHtcbiAgICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gYWNmW3Byb3BlcnR5TmFtZV1cbiAgICBpZiAoIWlzUmVmZXJlbmNlKHByb3BlcnR5VmFsdWUpKSByZXR1cm5cblxuICAgIGFjZltwcm9wZXJ0eU5hbWVdID0gcmVzb2x2ZVByb3BlcnR5UmVmZXJlbmNlcyhcbiAgICAgIHNyY0NvbnRlbnQsXG4gICAgICBwcm9wZXJ0eU5hbWUsXG4gICAgICBwcm9wZXJ0eVZhbHVlXG4gICAgKVxuICB9KVxufVxuXG5mdW5jdGlvbiBpc1JlZmVyZW5jZSAoZW50aXR5KSB7XG4gIHJldHVybiAoXG4gICAgQXJyYXkuaXNBcnJheShlbnRpdHkpICYmXG4gICAgICBlbnRpdHkubGVuZ3RoICYmXG4gICAgICBlbnRpdHlbMF0uSUQgJiZcbiAgICAgIGVudGl0eVswXS5wb3N0X3R5cGVcbiAgKVxufVxuXG5mdW5jdGlvbiBnZXRSZWZlcmVuY2VkRW50aXR5IChjb250ZW50LCByZWZFbnRpdHlTcmMpIHtcbiAgY29uc3Qge1xuICAgIElEOiBpZCxcbiAgICBwb3N0X3R5cGU6IHBvc3RUeXBlXG4gIH0gPSByZWZFbnRpdHlTcmNcblxuICBjb25zdCBlbnRpdGllcyA9IGNvbnRlbnRbcG9zdFR5cGVdXG4gIHJldHVybiBlbnRpdGllc1xuICAgID8gZ2V0QnlJZChlbnRpdGllcywgaWQpXG4gICAgOiByZWZFbnRpdHlTcmNcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZVByb3BlcnR5UmVmZXJlbmNlcyAoY29udGVudCwgcHJvcGVydHlOYW1lLCBwcm9wZXJ0eVZhbHVlKSB7XG4gIGNvbnN0IHJlc29sdmVkVmFsdWUgPSBwcm9wZXJ0eVZhbHVlLm1hcChyZWZFbnRpdHlTcmMgPT5cbiAgICBnZXRSZWZlcmVuY2VkRW50aXR5KGNvbnRlbnQsIHJlZkVudGl0eVNyYykpXG5cbiAgaWYgKGlzU2luZ2xlRW50aXR5UmVmZXJlbmNlKHByb3BlcnR5TmFtZSwgcHJvcGVydHlWYWx1ZVswXS5wb3N0X3R5cGUpKSB7XG4gICAgcmV0dXJuIHJlc29sdmVkVmFsdWVbMF1cbiAgfVxuXG4gIHJldHVybiByZXNvbHZlZFZhbHVlXG59XG5cbmZ1bmN0aW9uIGlzU2luZ2xlRW50aXR5UmVmZXJlbmNlIChzcmNQcm9wZXJ0eU5hbWUsIGRzdFByb3BlcnR5TmFtZSkge1xuICBjb25zdCByZWdleHAgPSAvXig/Oi4qXyk/KC4rKSQvXG4gIGNvbnN0IHNyYyA9IHJlZ2V4cC5leGVjKHNyY1Byb3BlcnR5TmFtZSlbMV1cbiAgY29uc3QgZHN0ID0gcmVnZXhwLmV4ZWMoZHN0UHJvcGVydHlOYW1lKVsxXVxuXG4gIHJldHVybiBzcmMgPT09IGRzdFxufVxuXG5mdW5jdGlvbiBnZXRCeUlkIChlbnRpdGllcywgaWQpIHtcbiAgZm9yIChjb25zdCBlbnRpdHkgb2YgZW50aXRpZXMpIHtcbiAgICBpZiAoZW50aXR5LmlkID09PSBpZCkgcmV0dXJuIGVudGl0eVxuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKGBFbnRpdHkgd2l0aCBpZDogJyR7aWR9JyB3YXMgbm90IGZvdW5kIGluIGdpdmVuIGxpc3RgKVxufVxuIl19